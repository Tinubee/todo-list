{"version":3,"sources":["atoms.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["cate","localStorage","getItem","localCate","JSON","parse","localCategory","length","categoryState","atom","key","default","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","Form","styled","form","Input","input","Button","button","CreateToDo","useRecoilState","setToDos","useRecoilValue","useForm","register","handleSubmit","setValue","setItem","stringify","onSubmit","oldToDos","text","id","Date","now","required","placeholder","icon","faPlus","ToDoText","span","props","delete","BtnContainer","div","ToDoList","ToDo","useSetRecoilState","map","categoryItem","name","onClick","event","console","log","targetIndex","findIndex","newToDo","slice","arr","data","Container","CategoryList","select","Title","h1","useState","add","setAdd","setCategory","newCategoryArr","addcategory","push","value","onInput","currentTarget","GlobalStyle","createGlobalStyle","theme","bgColor","textColor","App","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.1b3f9b98.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: string;\n}\n\nlet cate = localStorage.getItem(\"category\");\nlet localCate = JSON.parse(cate as any);\nconst categories = [\"TO DO\", \"DOING\", \"DONE\"];\n\nexport const localCategory = localCate?.length > 0 ? localCate : categories;\n\nexport const categoryState = atom<string>({\n  key: \"category\",\n  default: localCategory[0],\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: JSON.parse(localStorage.getItem(\"toDos\") || \"[]\"),\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { categoryState, toDoState } from \"../atoms\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n  border-radius: 5px;\n  padding: 5px;\n  width: 100%;\n`;\n\nexport const Button = styled.button`\n  font-size: 20px;\n  background-color: blue;\n  color: white;\n  border-radius: 5px;\n`;\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      { text: toDo, id: Date.now(), category },\n      ...oldToDos,\n    ]);\n    setValue(\"toDo\", \"\");\n  };\n  localStorage.setItem(\"toDos\", JSON.stringify(toDos));\n  return (\n    <Form onSubmit={handleSubmit(handleValid)}>\n      <Input\n        {...register(\"toDo\", {\n          required: \"Please write a To Do\",\n        })}\n        placeholder=\"Write a to do...\"\n      />\n      <Button>\n        <FontAwesomeIcon icon={faPlus} />\n      </Button>\n    </Form>\n  );\n}\n\nexport default CreateToDo;\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { IToDo, localCategory, toDoState } from \"../atoms\";\n\nconst ToDoText = styled.span`\n  font-weight: 600;\n  font-size: 20px;\n`;\n\nconst Button = styled.button<{ delete: boolean }>`\n  font-size: 16px;\n  background-color: ${(props) => (props.delete ? \"red\" : \"aqua\")};\n  color: ${(props) => (props.delete ? \"white\" : \"black\")};\n  border-radius: 5px;\n`;\n\nconst BtnContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n\nconst ToDoList = styled.div`\n  border: 1px solid white;\n  border-radius: 10px;\n  padding: 10px;\n  margin-top: 10px;\n`;\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    console.log(event);\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const newToDo = {\n        text,\n        id,\n        category: event as any,\n      };\n\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n\n  const deleteClick = () => {\n    setToDos((arr) => {\n      return arr.filter((data) => data.id !== id);\n    });\n  };\n\n  return (\n    <ToDoList>\n      <BtnContainer>\n        <ToDoText>⭐️ {text}</ToDoText>\n        {localCategory.map(\n          (categoryItem: any) =>\n            category !== categoryItem && (\n              <Button\n                key={categoryItem}\n                delete={false}\n                name={categoryItem}\n                onClick={() => onClick(categoryItem)}\n              >\n                {categoryItem}\n              </Button>\n            )\n        )}\n        <Button onClick={deleteClick} delete={true}>\n          Delete\n        </Button>\n      </BtnContainer>\n    </ToDoList>\n  );\n}\nexport default ToDo;\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { categoryState, localCategory, toDoSelector } from \"../atoms\";\nimport CreateToDo, { Button, Form, Input } from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 420px;\n  margin: 30% auto;\n  border: 1px solid white;\n  height: 70vh;\n  border-radius: 10px;\n`;\n\nconst CategoryList = styled.select`\n  font-size: 22px;\n  border-radius: 5px;\n  padding: 5px;\n  border: 1px solid white;\n  background-color: black;\n  color: white;\n  margin: 10px 0px 5px 0px;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: 30px;\n  text-align: center;\n  font-weight: 600;\n  margin-top: 10px;\n`;\n\ninterface IForm {\n  addcategory: string;\n}\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  const [add, setAdd] = useState(true);\n  const [category, setCategory] = useRecoilState(categoryState);\n\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n  };\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const newCategoryArr = localCategory;\n  const handleValid = ({ addcategory }: IForm) => {\n    newCategoryArr.push(addcategory);\n    localStorage.setItem(\"category\", JSON.stringify(newCategoryArr));\n    setValue(\"addcategory\", \"\");\n    setAdd(!add);\n  };\n\n  return (\n    <Container>\n      <Title>To Dos</Title>\n      <hr />\n      <Form onSubmit={handleSubmit(handleValid)}>\n        <Input\n          {...register(\"addcategory\", {\n            required: \"Please write a add Category Name\",\n          })}\n          placeholder=\"Write a to add category...\"\n        />\n        <Button>\n          <FontAwesomeIcon icon={faPlus} />\n        </Button>\n      </Form>\n      <CategoryList value={category} onInput={onInput}>\n        {localCategory.map((category: any) => (\n          <option key={category} value={category}>\n            {category}\n          </option>\n        ))}\n      </CategoryList>\n      <hr />\n      <CreateToDo />\n      {toDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </Container>\n  );\n}\n\nexport default ToDoList;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};\n"],"sourceRoot":""}